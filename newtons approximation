# first iteration example as well as derivation of newtons method
from manim import *
from math import pi
import numpy as np
# manim -pqh Manim_work_space.py My_scene
x = np.linspace(0, 10, 10000)
function_of_x = 1**2 - 3
derivative_of_x = 2*1
point_of_intersection = (1 - (function_of_x/derivative_of_x))

class My_scenes(ZoomedScene):
# these init fuction is just initialization of the attributes soo just u cam adjest them according to scene 
# just becarefull while writing self.play in construct function i don't know why it takes zoomed_camera even though i did'nt defined it that way all though the code works
    def __init__(self):
        ZoomedScene.__init__(
            self,
            zoom_factor=1,
            zoomed_display_height=4,
            zoomed_display_width=3,
            image_frame_stroke_width=20,
            zoomed_camera_config={
                "default_frame_stroke_width": 3,
            }
        )
    def construct(self):
        axes = Axes(
            axis_config={'include_numbers': True, 'numbers_to_exclude': [0]},
            x_range=[-6, 6, ],
            y_range=[-6, 6, ],
            x_length=6,
            y_length=6,
            x_axis_config={'color': ORANGE},
            y_axis_config={'color': ORANGE},
        )
        axes_label = axes.get_axis_labels(x_label='x', y_label='f(x)')
        graph = axes.plot(lambda x: x**2 - 3, x_range=[-3, 3], color=YELLOW)
        point = axes.coords_to_point(1, 1**2 - 3)
        dot = Dot(point)
        line = axes.get_vertical_line(point)
        point1 = axes.coords_to_point(point_of_intersection, 0)
        dot1 = Dot(point1)
        line2 = Line(dot, dot1, color=BLUE)
        object_group = Group(axes_label, graph, axes)
        self.add(axes,axes_label)
        self.play(Create(graph, run_time=2))
        self.play(Wait())
        self.play(object_group.animate.shift(LEFT*3))
        self.activate_zooming(animate=False)
        self.zoomed_camera.frame.shift(LEFT*3)
        self.play(self.zoomed_camera.frame.animate.scale(0.5))
        self.play(self.zoomed_camera.frame.animate.shift(0.5 * DOWN).shift(0.5*RIGHT))
        line.shift(LEFT*3)
        self.play(Create(line))
        dot.shift(LEFT * 3)
        self.play(FadeIn(dot))
        self.play(Wait())
        line2.shift(LEFT * 3)
        self.play(Create(line2))
        self.add(dot1)
        dot1.shift(LEFT * 3)
        self.play(Wait())
        
        
